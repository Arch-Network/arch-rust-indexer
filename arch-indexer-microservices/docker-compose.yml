version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: archindexer
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  indexer:
    build:
      context: ./indexer
      dockerfile: Dockerfile
      args:
        CARGO_FEATURES: atlas_ingestion
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/archindexer
      REDIS_URL: redis://redis:6379
      ARCH_NODE_URL: http://44.196.173.35:8081
      ARCH_NODE_WEBSOCKET_URL: ws://44.196.173.35:10081
      ATLAS_CHECKPOINT_PATH: /data/.atlas_checkpoints
      RUST_LOG: indexer=info,atlas_core=info,atlas_progress=info
      ENABLE_REALTIME: true
      WEBSOCKET_ENABLED: true
      ARCH_FAST_FORWARD_WINDOW: "0"
      ARCH_BULK_BATCH_SIZE: "5000"
      ARCH_MAX_CONCURRENCY: "192"
      ARCH_FETCH_WINDOW_SIZE: "16384"
      ARCH_INITIAL_BACKOFF_MS: "10"
      ATLAS_USE_COPY_BULK: "1"
      # Arch built-ins: System(hex), ComputeBudget, Vote, Stake, BPF Loader, Native Loader
      ARCH_BUILTIN_PROGRAMS: "0000000000000000000000000000000000000000000000000000000000000001,ComputeBudget111111111111111111111111111111,VoteProgram111111111111111111111,StakeProgram11111111111111111111,BpfLoader11111111111111111111111,NativeLoader11111111111111111111,AplToken111111111111111111111111"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./config.yml:/app/config.yml:ro
      - ./data/indexer:/data
    restart: unless-stopped

  api-server:
    build:
      context: ./api-server
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/archindexer
      HOST: 0.0.0.0
      PORT: 3001
      ARCH_NODE_URL: http://44.196.173.35:8081
      ARCH_NODE_WEBSOCKET_URL: ws://44.196.173.35:10081
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    volumes:
      - ./config.yml:/app/config.yml:ro
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost:3001
        NEXT_PUBLIC_WS_URL: ws://localhost:3001
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_WS_URL: ws://localhost:3001
      NEXT_PUBLIC_ARCH_NODE_URL: http://44.196.173.35:8081
      NEXT_PUBLIC_ARCH_NODE_WS_URL: ws://44.196.173.35:10081
    depends_on:
      - api-server
    restart: unless-stopped

volumes:
  postgres_data:
